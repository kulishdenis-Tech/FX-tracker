import os
import asyncio
from telethon import TelegramClient
from storage_utils import upload_text, download_text  # cloud-—Å—Ç–æ—Ä–µ–¥–∂ Supabase
from dotenv import load_dotenv
from datetime import datetime

# --- –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö –æ—Ç–æ—á–µ–Ω–Ω—è ---
load_dotenv()

# Supabase
SUPABASE_URL = os.getenv("SUPABASE_URL")
SUPABASE_KEY = os.getenv("SUPABASE_KEY")

# Telegram
TG_BOT_TOKEN = os.getenv("TG_BOT_TOKEN")
API_ID = int(os.getenv("TG_API_ID", 6))  # –¢–µ—Å—Ç–æ–≤–∏–π ID (Telegram default)
API_HASH = os.getenv("TG_API_HASH", "eb06d4abfb49dc3eeb1aeb98ae0f581e")

if not TG_BOT_TOKEN:
    raise ValueError("‚ùå TG_BOT_TOKEN –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ —É –∑–º—ñ–Ω–Ω–∏—Ö –æ—Ç–æ—á–µ–Ω–Ω—è Render!")

SESSION_NAME = "render_fetcher_session"

# --- –ö–∞–Ω–∞–ª–∏ ---
CHANNELS = {
    "MIRVALUTY": "mirvaluty",
    "GARANT": "obmen_kyiv",
    "KIT_GROUP": "obmenka_kievua",
    "CHANGE_KYIV": "kiev_change",
    "VALUTA_KIEV": "valuta_kiev",
    "UACOIN": "uacoin",
    "SWAPS": "obmen_usd",
}

HISTORY_LIMIT = 300  # —Å–∫—ñ–ª—å–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å —Ç—è–≥–Ω—É—Ç–∏ –ø—Ä–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó


# --- –û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è ---
async def fetch_channel_history():
    print("[START] Telegram Fetcher (BOT mode, Render)")

    # —Å—Ç–≤–æ—Ä—é—î–º–æ –∫–ª—ñ—î–Ω—Ç —ñ–∑ —Ñ—ñ–∫—Ç–∏–≤–Ω–∏–º–∏ API_ID —Ç–∞ API_HASH
    client = TelegramClient(SESSION_NAME, API_ID, API_HASH)
    await client.start(bot_token=TG_BOT_TOKEN)
    print("[TG] ‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è —á–µ—Ä–µ–∑ –±–æ—Ç-—Ç–æ–∫–µ–Ω —É—Å–ø—ñ—à–Ω–∞")

    for label, username in CHANNELS.items():
        try:
            print(f"[TG] üì• –ß–∏—Ç–∞—é –∫–∞–Ω–∞–ª: {label} / @{username}")
            messages = []

            async for msg in client.iter_messages(username, limit=HISTORY_LIMIT):
                if msg.text:
                    line = (
                        f"[{msg.date.strftime('%Y-%m-%d %H:%M:%S')}]\n"
                        f"{msg.text}\n"
                        + "-" * 80
                    )
                    messages.append(line)

            if messages:
                raw_text = "\n".join(reversed(messages))  # —Ö—Ä–æ–Ω–æ–ª–æ–≥—ñ—á–Ω–æ
                fname = f"{label}_raw.txt"
                upload_text(fname, raw_text, upsert=True)
                print(f"[STORE] ‚òÅÔ∏è {fname} –∑–±–µ—Ä–µ–∂–µ–Ω–æ —É Supabase Storage ({len(messages)} msgs)")
            else:
                print(f"[TG] ‚ö†Ô∏è {label}: –Ω–µ–º–∞—î —Ç–µ–∫—Å—Ç–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å.")
        except Exception as e:
            print(f"[ERR] {label}: {e}")

    await client.disconnect()
    print("[DONE] ‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ")


if __name__ == "__main__":
    asyncio.run(fetch_channel_history())
